{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai\\\\Downloads\\\\prototype1\\\\jee-neet-clean\\\\screens\\\\LoginScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextInput, Button, Text, Card } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginScreen() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n  const handleLogin = async () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      navigation.replace('MainTabs');\n    }, 2000);\n  };\n  if (loading) {\n    return _jsxDEV(LoadingSpinner, {\n      message: \"Logging in...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(Card, {\n      style: styles.card,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Text, {\n          variant: \"headlineMedium\",\n          style: styles.title,\n          children: \"Welcome Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          variant: \"bodyMedium\",\n          style: styles.subtitle,\n          children: \"Sign in to continue your exam preparation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          label: \"Email or Phone\",\n          value: email,\n          onChangeText: setEmail,\n          mode: \"outlined\",\n          style: styles.input,\n          keyboardType: \"email-address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          label: \"Password\",\n          value: password,\n          onChangeText: setPassword,\n          mode: \"outlined\",\n          secureTextEntry: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          mode: \"contained\",\n          onPress: handleLogin,\n          style: styles.button,\n          disabled: !email || !password,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16,\n    backgroundColor: '#f5f5f5'\n  },\n  card: {\n    padding: 16\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  subtitle: {\n    textAlign: 'center',\n    marginBottom: 32,\n    opacity: 0.7\n  },\n  input: {\n    marginBottom: 16\n  },\n  button: {\n    marginTop: 16,\n    paddingVertical: 8\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","TextInput","Button","Text","Card","useNavigation","LoadingSpinner","jsxDEV","_jsxDEV","LoginScreen","email","setEmail","password","setPassword","loading","setLoading","navigation","handleLogin","setTimeout","replace","message","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","children","card","Content","variant","title","subtitle","label","value","onChangeText","mode","input","keyboardType","secureTextEntry","onPress","button","disabled","create","flex","justifyContent","padding","backgroundColor","textAlign","marginBottom","opacity","marginTop","paddingVertical"],"sources":["C:/Users/Sai/Downloads/prototype1/jee-neet-clean/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TextInput, Button, Text, Card } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nexport default function LoginScreen() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const handleLogin = async () => {\r\n    setLoading(true);\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      navigation.replace('MainTabs');\r\n    }, 2000);\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner message=\"Logging in...\" />;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Card style={styles.card}>\r\n        <Card.Content>\r\n          <Text variant=\"headlineMedium\" style={styles.title}>\r\n            Welcome Back\r\n          </Text>\r\n          <Text variant=\"bodyMedium\" style={styles.subtitle}>\r\n            Sign in to continue your exam preparation\r\n          </Text>\r\n          \r\n          <TextInput\r\n            label=\"Email or Phone\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            keyboardType=\"email-address\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Password\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            mode=\"outlined\"\r\n            secureTextEntry\r\n            style={styles.input}\r\n          />\r\n          \r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleLogin}\r\n            style={styles.button}\r\n            disabled={!email || !password}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Card.Content>\r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  card: {\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    textAlign: 'center',\r\n    marginBottom: 32,\r\n    opacity: 0.7,\r\n  },\r\n  input: {\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    marginTop: 16,\r\n    paddingVertical: 8,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai\\\\Downloads\\\\prototype1\\\\jee-neet-clean\\\\screens\\\\DifficultySelectionScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, Card, Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DifficultySelectionScreen() {\n  const [loading, setLoading] = useState(true);\n  const navigation = useNavigation();\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 2000);\n  }, []);\n  const startExam = difficulty => {\n    navigation.navigate('Exam', {\n      selectionType: 'difficulty',\n      selectedItems: [difficulty]\n    });\n  };\n  if (loading) {\n    return _jsxDEV(LoadingSpinner, {\n      message: \"Loading difficulties...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      variant: \"headlineSmall\",\n      style: styles.title,\n      children: \"Choose Difficulty Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      variant: \"bodyMedium\",\n      style: styles.subtitle,\n      children: \"Select the difficulty level for your practice test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.cardsContainer,\n      children: [_jsxDEV(Card, {\n        style: [styles.card, styles.easyCard],\n        children: _jsxDEV(Card.Content, {\n          style: styles.cardContent,\n          children: [_jsxDEV(Text, {\n            variant: \"titleLarge\",\n            style: styles.cardTitle,\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            variant: \"bodyMedium\",\n            style: styles.cardDescription,\n            children: \"Basic concepts and fundamental questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            mode: \"contained\",\n            onPress: () => startExam('Easy'),\n            style: styles.button,\n            children: \"Start Easy Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), _jsxDEV(Card, {\n        style: [styles.card, styles.mediumCard],\n        children: _jsxDEV(Card.Content, {\n          style: styles.cardContent,\n          children: [_jsxDEV(Text, {\n            variant: \"titleLarge\",\n            style: styles.cardTitle,\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            variant: \"bodyMedium\",\n            style: styles.cardDescription,\n            children: \"Intermediate level with moderate complexity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            mode: \"contained\",\n            onPress: () => startExam('Medium'),\n            style: styles.button,\n            children: \"Start Medium Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), _jsxDEV(Card, {\n        style: [styles.card, styles.hardCard],\n        children: _jsxDEV(Card.Content, {\n          style: styles.cardContent,\n          children: [_jsxDEV(Text, {\n            variant: \"titleLarge\",\n            style: styles.cardTitle,\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            variant: \"bodyMedium\",\n            style: styles.cardDescription,\n            children: \"Advanced questions for expert preparation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            mode: \"contained\",\n            onPress: () => startExam('Hard'),\n            style: styles.button,\n            children: \"Start Hard Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  subtitle: {\n    textAlign: 'center',\n    marginBottom: 32,\n    opacity: 0.7\n  },\n  cardsContainer: {\n    gap: 16\n  },\n  card: {\n    elevation: 4\n  },\n  easyCard: {\n    backgroundColor: '#E8F5E8'\n  },\n  mediumCard: {\n    backgroundColor: '#FFF3E0'\n  },\n  hardCard: {\n    backgroundColor: '#FFEBEE'\n  },\n  cardContent: {\n    alignItems: 'center',\n    padding: 24\n  },\n  cardTitle: {\n    marginBottom: 12,\n    fontWeight: 'bold'\n  },\n  cardDescription: {\n    textAlign: 'center',\n    marginBottom: 20,\n    opacity: 0.8\n  },\n  button: {\n    minWidth: 150\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Text","Card","Button","useNavigation","LoadingSpinner","jsxDEV","_jsxDEV","DifficultySelectionScreen","loading","setLoading","navigation","setTimeout","startExam","difficulty","navigate","selectionType","selectedItems","message","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","children","variant","title","subtitle","cardsContainer","card","easyCard","Content","cardContent","cardTitle","cardDescription","mode","onPress","button","mediumCard","hardCard","create","flex","padding","backgroundColor","textAlign","marginBottom","opacity","gap","elevation","alignItems","fontWeight","minWidth"],"sources":["C:/Users/Sai/Downloads/prototype1/jee-neet-clean/screens/DifficultySelectionScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Text, Card, Button } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nexport default function DifficultySelectionScreen() {\r\n  const [loading, setLoading] = useState(true);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setLoading(false), 2000);\r\n  }, []);\r\n\r\n  const startExam = (difficulty) => {\r\n    navigation.navigate('Exam', {\r\n      selectionType: 'difficulty',\r\n      selectedItems: [difficulty],\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner message=\"Loading difficulties...\" />;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text variant=\"headlineSmall\" style={styles.title}>\r\n        Choose Difficulty Level\r\n      </Text>\r\n      <Text variant=\"bodyMedium\" style={styles.subtitle}>\r\n        Select the difficulty level for your practice test\r\n      </Text>\r\n\r\n      <View style={styles.cardsContainer}>\r\n        <Card style={[styles.card, styles.easyCard]}>\r\n          <Card.Content style={styles.cardContent}>\r\n            <Text variant=\"titleLarge\" style={styles.cardTitle}>\r\n              Easy\r\n            </Text>\r\n            <Text variant=\"bodyMedium\" style={styles.cardDescription}>\r\n              Basic concepts and fundamental questions\r\n            </Text>\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={() => startExam('Easy')}\r\n              style={styles.button}\r\n            >\r\n              Start Easy Test\r\n            </Button>\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        <Card style={[styles.card, styles.mediumCard]}>\r\n          <Card.Content style={styles.cardContent}>\r\n            <Text variant=\"titleLarge\" style={styles.cardTitle}>\r\n              Medium\r\n            </Text>\r\n            <Text variant=\"bodyMedium\" style={styles.cardDescription}>\r\n              Intermediate level with moderate complexity\r\n            </Text>\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={() => startExam('Medium')}\r\n              style={styles.button}\r\n            >\r\n              Start Medium Test\r\n            </Button>\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        <Card style={[styles.card, styles.hardCard]}>\r\n          <Card.Content style={styles.cardContent}>\r\n            <Text variant=\"titleLarge\" style={styles.cardTitle}>\r\n              Hard\r\n            </Text>\r\n            <Text variant=\"bodyMedium\" style={styles.cardDescription}>\r\n              Advanced questions for expert preparation\r\n            </Text>\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={() => startExam('Hard')}\r\n              style={styles.button}\r\n            >\r\n              Start Hard Test\r\n            </Button>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    textAlign: 'center',\r\n    marginBottom: 32,\r\n    opacity: 0.7,\r\n  },\r\n  cardsContainer: {\r\n    gap: 16,\r\n  },\r\n  card: {\r\n    elevation: 4,\r\n  },\r\n  easyCard: {\r\n    backgroundColor: '#E8F5E8',\r\n  },\r\n  mediumCard: {\r\n    backgroundColor: '#FFF3E0',\r\n  },\r\n  hardCard: {\r\n    backgroundColor: '#FFEBEE',\r\n  },\r\n  cardContent: {\r\n    alignItems: 'center',\r\n    padding: 24,\r\n  },\r\n  cardTitle: {\r\n    marginBottom: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  cardDescription: {\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n    opacity: 0.8,\r\n  },\r\n  button: {\r\n    minWidth: 150,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai\\\\Downloads\\\\prototype1\\\\jee-neet-clean\\\\screens\\\\TopicSelectionScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, Checkbox, Button, Card } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport questionsData from '../data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopicSelectionScreen() {\n  const [loading, setLoading] = useState(true);\n  const [selectedTopics, setSelectedTopics] = useState([]);\n  const navigation = useNavigation();\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 2000);\n  }, []);\n  const toggleTopic = topic => {\n    setSelectedTopics(prev => prev.includes(topic) ? prev.filter(t => t !== topic) : [...prev, topic]);\n  };\n  const startTest = () => {\n    if (selectedTopics.length > 0) {\n      navigation.navigate('Exam', {\n        selectionType: 'topics',\n        selectedItems: selectedTopics\n      });\n    }\n  };\n  if (loading) {\n    return _jsxDEV(LoadingSpinner, {\n      message: \"Loading topics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      variant: \"headlineSmall\",\n      style: styles.title,\n      children: \"Select Topics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      variant: \"bodyMedium\",\n      style: styles.subtitle,\n      children: \"Choose one or more topics for your practice test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.topicsContainer,\n      children: questionsData.topics.map(topic => _jsxDEV(Card, {\n        style: styles.topicCard,\n        children: _jsxDEV(Card.Content, {\n          children: _jsxDEV(View, {\n            style: styles.topicRow,\n            children: [_jsxDEV(Checkbox, {\n              status: selectedTopics.includes(topic) ? 'checked' : 'unchecked',\n              onPress: () => toggleTopic(topic)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              variant: \"titleMedium\",\n              style: styles.topicText,\n              children: topic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, topic, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: [_jsxDEV(Text, {\n        variant: \"bodySmall\",\n        style: styles.selectedText,\n        children: [selectedTopics.length, \" topic(s) selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        mode: \"contained\",\n        onPress: startTest,\n        disabled: selectedTopics.length === 0,\n        style: styles.startButton,\n        children: \"Start Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  subtitle: {\n    textAlign: 'center',\n    marginBottom: 24,\n    opacity: 0.7\n  },\n  topicsContainer: {\n    flex: 1\n  },\n  topicCard: {\n    marginBottom: 12\n  },\n  topicRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  topicText: {\n    marginLeft: 12,\n    flex: 1\n  },\n  buttonContainer: {\n    paddingTop: 16,\n    alignItems: 'center'\n  },\n  selectedText: {\n    marginBottom: 12,\n    opacity: 0.7\n  },\n  startButton: {\n    minWidth: 150,\n    paddingVertical: 4\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","Text","Checkbox","Button","Card","useNavigation","LoadingSpinner","questionsData","jsxDEV","_jsxDEV","TopicSelectionScreen","loading","setLoading","selectedTopics","setSelectedTopics","navigation","setTimeout","toggleTopic","topic","prev","includes","filter","t","startTest","length","navigate","selectionType","selectedItems","message","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","children","variant","title","subtitle","topicsContainer","topics","map","topicCard","Content","topicRow","status","onPress","topicText","buttonContainer","selectedText","mode","disabled","startButton","create","flex","padding","backgroundColor","textAlign","marginBottom","opacity","flexDirection","alignItems","marginLeft","paddingTop","minWidth","paddingVertical"],"sources":["C:/Users/Sai/Downloads/prototype1/jee-neet-clean/screens/TopicSelectionScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, ScrollView } from 'react-native';\r\nimport { Text, Checkbox, Button, Card } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport questionsData from '../data/questions.json';\r\n\r\nexport default function TopicSelectionScreen() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTopics, setSelectedTopics] = useState([]);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setLoading(false), 2000);\r\n  }, []);\r\n\r\n  const toggleTopic = (topic) => {\r\n    setSelectedTopics(prev => \r\n      prev.includes(topic) \r\n        ? prev.filter(t => t !== topic)\r\n        : [...prev, topic]\r\n    );\r\n  };\r\n\r\n  const startTest = () => {\r\n    if (selectedTopics.length > 0) {\r\n      navigation.navigate('Exam', {\r\n        selectionType: 'topics',\r\n        selectedItems: selectedTopics,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner message=\"Loading topics...\" />;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text variant=\"headlineSmall\" style={styles.title}>\r\n        Select Topics\r\n      </Text>\r\n      <Text variant=\"bodyMedium\" style={styles.subtitle}>\r\n        Choose one or more topics for your practice test\r\n      </Text>\r\n\r\n      <ScrollView style={styles.topicsContainer}>\r\n        {questionsData.topics.map((topic) => (\r\n          <Card key={topic} style={styles.topicCard}>\r\n            <Card.Content>\r\n              <View style={styles.topicRow}>\r\n                <Checkbox\r\n                  status={selectedTopics.includes(topic) ? 'checked' : 'unchecked'}\r\n                  onPress={() => toggleTopic(topic)}\r\n                />\r\n                <Text variant=\"titleMedium\" style={styles.topicText}>\r\n                  {topic}\r\n                </Text>\r\n              </View>\r\n            </Card.Content>\r\n          </Card>\r\n        ))}\r\n      </ScrollView>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <Text variant=\"bodySmall\" style={styles.selectedText}>\r\n          {selectedTopics.length} topic(s) selected\r\n        </Text>\r\n        <Button\r\n          mode=\"contained\"\r\n          onPress={startTest}\r\n          disabled={selectedTopics.length === 0}\r\n          style={styles.startButton}\r\n        >\r\n          Start Test\r\n        </Button>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    textAlign: 'center',\r\n    marginBottom: 24,\r\n    opacity: 0.7,\r\n  },\r\n  topicsContainer: {\r\n    flex: 1,\r\n  },\r\n  topicCard: {\r\n    marginBottom: 12,\r\n  },\r\n  topicRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  topicText: {\r\n    marginLeft: 12,\r\n    flex: 1,\r\n  },\r\n  buttonContainer: {\r\n    paddingTop: 16,\r\n    alignItems: 'center',\r\n  },\r\n  selectedText: {\r\n    marginBottom: 12,\r\n    opacity: 0.7,\r\n  },\r\n  startButton: {\r\n    minWidth: 150,\r\n    paddingVertical: 4,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
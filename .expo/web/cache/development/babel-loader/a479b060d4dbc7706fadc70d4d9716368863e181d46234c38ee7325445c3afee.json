{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai\\\\Downloads\\\\prototype1\\\\jee-neet-clean\\\\screens\\\\ResultScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, Card, Button, Snackbar, List } from 'react-native-paper';\nimport { BarChart } from 'react-native-chart-kit';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst screenWidth = Dimensions.get('window').width;\nexport default function ResultScreen() {\n  const [loading, setLoading] = useState(true);\n  const [snackbarVisible, setSnackbarVisible] = useState(false);\n  const [expandedQuestions, setExpandedQuestions] = useState({});\n  const navigation = useNavigation();\n  const route = useRoute();\n  const {\n    questions = [],\n    answers = []\n  } = route.params || {};\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setSnackbarVisible(true);\n    }, 2000);\n  }, []);\n  if (loading) {\n    return _jsxDEV(LoadingSpinner, {\n      message: \"Calculating results...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  const totalQuestions = questions.length;\n  const attempted = answers.filter(answer => answer !== null).length;\n  const correct = answers.filter((answer, index) => answer !== null && answer === questions[index]?.answerIndex).length;\n  const wrong = attempted - correct;\n  const accuracy = attempted > 0 ? Math.round(correct / attempted * 100) : 0;\n  const topicStats = {};\n  questions.forEach((question, index) => {\n    const topic = question.topic;\n    if (!topicStats[topic]) {\n      topicStats[topic] = {\n        total: 0,\n        correct: 0\n      };\n    }\n    topicStats[topic].total++;\n    if (answers[index] === question.answerIndex) {\n      topicStats[topic].correct++;\n    }\n  });\n  const chartData = {\n    labels: Object.keys(topicStats),\n    datasets: [{\n      data: Object.values(topicStats).map(stat => stat.total > 0 ? Math.round(stat.correct / stat.total * 100) : 0)\n    }]\n  };\n  const toggleQuestion = index => {\n    setExpandedQuestions(prev => Object.assign({}, prev, {\n      [index]: !prev[index]\n    }));\n  };\n  const getOptionLetter = index => String.fromCharCode(65 + index);\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    children: [_jsxDEV(Card, {\n      style: styles.summaryCard,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Text, {\n          variant: \"headlineSmall\",\n          style: styles.title,\n          children: \"Test Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statsRow,\n          children: [_jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              variant: \"headlineMedium\",\n              style: styles.statNumber,\n              children: totalQuestions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              variant: \"bodyMedium\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              variant: \"headlineMedium\",\n              style: [styles.statNumber, styles.attempted],\n              children: attempted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              variant: \"bodyMedium\",\n              children: \"Attempted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              variant: \"headlineMedium\",\n              style: [styles.statNumber, styles.correct],\n              children: correct\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              variant: \"bodyMedium\",\n              children: \"Correct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              variant: \"headlineMedium\",\n              style: [styles.statNumber, styles.wrong],\n              children: wrong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              variant: \"bodyMedium\",\n              children: \"Wrong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          variant: \"headlineLarge\",\n          style: styles.accuracy,\n          children: [accuracy, \"% Accuracy\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), Object.keys(topicStats).length > 0 && _jsxDEV(Card, {\n      style: styles.chartCard,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Text, {\n          variant: \"titleLarge\",\n          style: styles.chartTitle,\n          children: \"Topic-wise Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), _jsxDEV(BarChart, {\n          data: chartData,\n          width: screenWidth - 64,\n          height: 220,\n          chartConfig: {\n            backgroundColor: '#ffffff',\n            backgroundGradientFrom: '#ffffff',\n            backgroundGradientTo: '#ffffff',\n            decimalPlaces: 0,\n            color: (opacity = 1) => `rgba(33, 150, 243, ${opacity})`,\n            labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n            style: {\n              borderRadius: 16\n            },\n            propsForLabels: {\n              fontSize: 12\n            }\n          },\n          style: styles.chart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), _jsxDEV(Card, {\n      style: styles.reviewCard,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Text, {\n          variant: \"titleLarge\",\n          style: styles.reviewTitle,\n          children: \"Question Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), questions.map((question, index) => {\n          const userAnswer = answers[index];\n          const isCorrect = userAnswer === question.answerIndex;\n          const isAttempted = userAnswer !== null;\n          return _jsxDEV(List.Accordion, {\n            title: `Q${index + 1}. ${question.question.substring(0, 50)}...`,\n            description: isAttempted ? isCorrect ? 'Correct' : 'Wrong' : 'Not Attempted',\n            left: props => _jsxDEV(List.Icon, Object.assign({}, props, {\n              icon: isAttempted ? isCorrect ? 'check-circle' : 'close-circle' : 'help-circle',\n              color: isAttempted ? isCorrect ? '#4CAF50' : '#f44336' : '#9E9E9E'\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this),\n            expanded: expandedQuestions[index],\n            onPress: () => toggleQuestion(index),\n            style: styles.questionAccordion,\n            children: _jsxDEV(View, {\n              style: styles.questionDetail,\n              children: [_jsxDEV(Text, {\n                variant: \"bodyMedium\",\n                style: styles.questionText,\n                children: question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), _jsxDEV(View, {\n                style: styles.optionsContainer,\n                children: question.options.map((option, optionIndex) => {\n                  const isUserAnswer = userAnswer === optionIndex;\n                  const isCorrectAnswer = question.answerIndex === optionIndex;\n                  return _jsxDEV(View, {\n                    style: [styles.optionItem, isCorrectAnswer && styles.correctOption, isUserAnswer && !isCorrectAnswer && styles.wrongOption],\n                    children: _jsxDEV(Text, {\n                      style: [styles.optionText, isCorrectAnswer && styles.correctOptionText, isUserAnswer && !isCorrectAnswer && styles.wrongOptionText],\n                      children: [getOptionLetter(optionIndex), \". \", option, isCorrectAnswer && ' ✓', isUserAnswer && !isCorrectAnswer && ' ✗']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 27\n                    }, this)\n                  }, optionIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), _jsxDEV(View, {\n                style: styles.explanationContainer,\n                children: [_jsxDEV(Text, {\n                  variant: \"titleSmall\",\n                  style: styles.explanationTitle,\n                  children: \"Explanation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), _jsxDEV(Text, {\n                  variant: \"bodyMedium\",\n                  style: styles.explanationText,\n                  children: question.explanation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: _jsxDEV(Button, {\n        mode: \"contained\",\n        onPress: () => navigation.navigate('Dashboard'),\n        style: styles.homeButton,\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), _jsxDEV(Snackbar, {\n      visible: snackbarVisible,\n      onDismiss: () => setSnackbarVisible(false),\n      duration: 3000,\n      action: {\n        label: 'OK',\n        onPress: () => setSnackbarVisible(false)\n      },\n      children: \"Test completed successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  summaryCard: {\n    margin: 16,\n    marginBottom: 8\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 20\n  },\n  statItem: {\n    alignItems: 'center'\n  },\n  statNumber: {\n    fontWeight: 'bold'\n  },\n  attempted: {\n    color: '#2196F3'\n  },\n  correct: {\n    color: '#4CAF50'\n  },\n  wrong: {\n    color: '#f44336'\n  },\n  accuracy: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: '#2196F3'\n  },\n  chartCard: {\n    margin: 16,\n    marginVertical: 8\n  },\n  chartTitle: {\n    textAlign: 'center',\n    marginBottom: 16\n  },\n  chart: {\n    marginVertical: 8,\n    borderRadius: 16\n  },\n  reviewCard: {\n    margin: 16,\n    marginVertical: 8\n  },\n  reviewTitle: {\n    marginBottom: 16\n  },\n  questionAccordion: {\n    backgroundColor: '#fff',\n    marginBottom: 8,\n    borderRadius: 8\n  },\n  questionDetail: {\n    padding: 16,\n    backgroundColor: '#f9f9f9'\n  },\n  questionText: {\n    marginBottom: 16,\n    fontWeight: '500'\n  },\n  optionsContainer: {\n    marginBottom: 16\n  },\n  optionItem: {\n    padding: 8,\n    marginVertical: 2,\n    borderRadius: 4,\n    backgroundColor: '#fff'\n  },\n  correctOption: {\n    backgroundColor: '#E8F5E8',\n    borderColor: '#4CAF50',\n    borderWidth: 1\n  },\n  wrongOption: {\n    backgroundColor: '#FFEBEE',\n    borderColor: '#f44336',\n    borderWidth: 1\n  },\n  optionText: {\n    fontSize: 14\n  },\n  correctOptionText: {\n    color: '#2E7D32',\n    fontWeight: '500'\n  },\n  wrongOptionText: {\n    color: '#C62828',\n    fontWeight: '500'\n  },\n  explanationContainer: {\n    backgroundColor: '#E3F2FD',\n    padding: 12,\n    borderRadius: 8\n  },\n  explanationTitle: {\n    marginBottom: 8,\n    fontWeight: 'bold',\n    color: '#1976D2'\n  },\n  explanationText: {\n    lineHeight: 20\n  },\n  buttonContainer: {\n    padding: 16,\n    alignItems: 'center'\n  },\n  homeButton: {\n    minWidth: 200,\n    paddingVertical: 4\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","Text","Card","Button","Snackbar","List","BarChart","Dimensions","useNavigation","useRoute","LoadingSpinner","jsxDEV","_jsxDEV","screenWidth","get","width","ResultScreen","loading","setLoading","snackbarVisible","setSnackbarVisible","expandedQuestions","setExpandedQuestions","navigation","route","questions","answers","params","setTimeout","message","fileName","_jsxFileName","lineNumber","columnNumber","totalQuestions","length","attempted","filter","answer","correct","index","answerIndex","wrong","accuracy","Math","round","topicStats","forEach","question","topic","total","chartData","labels","Object","keys","datasets","data","values","map","stat","toggleQuestion","prev","assign","getOptionLetter","String","fromCharCode","style","styles","container","children","summaryCard","Content","variant","title","statsRow","statItem","statNumber","chartCard","chartTitle","height","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","borderRadius","propsForLabels","fontSize","chart","reviewCard","reviewTitle","userAnswer","isCorrect","isAttempted","Accordion","substring","description","left","props","Icon","icon","expanded","onPress","questionAccordion","questionDetail","questionText","optionsContainer","options","option","optionIndex","isUserAnswer","isCorrectAnswer","optionItem","correctOption","wrongOption","optionText","correctOptionText","wrongOptionText","explanationContainer","explanationTitle","explanationText","explanation","buttonContainer","mode","navigate","homeButton","visible","onDismiss","duration","action","label","create","flex","margin","marginBottom","textAlign","flexDirection","justifyContent","alignItems","fontWeight","marginVertical","padding","borderColor","borderWidth","lineHeight","minWidth","paddingVertical"],"sources":["C:/Users/Sai/Downloads/prototype1/jee-neet-clean/screens/ResultScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, ScrollView } from 'react-native';\r\nimport { Text, Card, Button, Snackbar, List } from 'react-native-paper';\r\nimport { BarChart } from 'react-native-chart-kit';\r\nimport { Dimensions } from 'react-native';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nexport default function ResultScreen() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [snackbarVisible, setSnackbarVisible] = useState(false);\r\n  const [expandedQuestions, setExpandedQuestions] = useState({});\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const { questions = [], answers = [] } = route.params || {};\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setSnackbarVisible(true);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner message=\"Calculating results...\" />;\r\n  }\r\n\r\n  // Calculate results\r\n  const totalQuestions = questions.length;\r\n  const attempted = answers.filter(answer => answer !== null).length;\r\n  const correct = answers.filter((answer, index) => \r\n    answer !== null && answer === questions[index]?.answerIndex\r\n  ).length;\r\n  const wrong = attempted - correct;\r\n  const accuracy = attempted > 0 ? Math.round((correct / attempted) * 100) : 0;\r\n\r\n  // Topic-wise analysis\r\n  const topicStats = {};\r\n  questions.forEach((question, index) => {\r\n    const topic = question.topic;\r\n    if (!topicStats[topic]) {\r\n      topicStats[topic] = { total: 0, correct: 0 };\r\n    }\r\n    topicStats[topic].total++;\r\n    if (answers[index] === question.answerIndex) {\r\n      topicStats[topic].correct++;\r\n    }\r\n  });\r\n\r\n  const chartData = {\r\n    labels: Object.keys(topicStats),\r\n    datasets: [{\r\n      data: Object.values(topicStats).map(stat => \r\n        stat.total > 0 ? Math.round((stat.correct / stat.total) * 100) : 0\r\n      )\r\n    }]\r\n  };\r\n\r\n  const toggleQuestion = (index) => {\r\n    setExpandedQuestions(prev => ({\r\n      ...prev,\r\n      [index]: !prev[index]\r\n    }));\r\n  };\r\n\r\n  const getOptionLetter = (index) => String.fromCharCode(65 + index);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Card style={styles.summaryCard}>\r\n        <Card.Content>\r\n          <Text variant=\"headlineSmall\" style={styles.title}>\r\n            Test Results\r\n          </Text>\r\n          <View style={styles.statsRow}>\r\n            <View style={styles.statItem}>\r\n              <Text variant=\"headlineMedium\" style={styles.statNumber}>\r\n                {totalQuestions}\r\n              </Text>\r\n              <Text variant=\"bodyMedium\">Total</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Text variant=\"headlineMedium\" style={[styles.statNumber, styles.attempted]}>\r\n                {attempted}\r\n              </Text>\r\n              <Text variant=\"bodyMedium\">Attempted</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Text variant=\"headlineMedium\" style={[styles.statNumber, styles.correct]}>\r\n                {correct}\r\n              </Text>\r\n              <Text variant=\"bodyMedium\">Correct</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Text variant=\"headlineMedium\" style={[styles.statNumber, styles.wrong]}>\r\n                {wrong}\r\n              </Text>\r\n              <Text variant=\"bodyMedium\">Wrong</Text>\r\n            </View>\r\n          </View>\r\n          <Text variant=\"headlineLarge\" style={styles.accuracy}>\r\n            {accuracy}% Accuracy\r\n          </Text>\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      {Object.keys(topicStats).length > 0 && (\r\n        <Card style={styles.chartCard}>\r\n          <Card.Content>\r\n            <Text variant=\"titleLarge\" style={styles.chartTitle}>\r\n              Topic-wise Performance\r\n            </Text>\r\n            <BarChart\r\n              data={chartData}\r\n              width={screenWidth - 64}\r\n              height={220}\r\n              chartConfig={{\r\n                backgroundColor: '#ffffff',\r\n                backgroundGradientFrom: '#ffffff',\r\n                backgroundGradientTo: '#ffffff',\r\n                decimalPlaces: 0,\r\n                color: (opacity = 1) => `rgba(33, 150, 243, ${opacity})`,\r\n                labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n                style: {\r\n                  borderRadius: 16\r\n                },\r\n                propsForLabels: {\r\n                  fontSize: 12\r\n                }\r\n              }}\r\n              style={styles.chart}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n\r\n      <Card style={styles.reviewCard}>\r\n        <Card.Content>\r\n          <Text variant=\"titleLarge\" style={styles.reviewTitle}>\r\n            Question Review\r\n          </Text>\r\n          {questions.map((question, index) => {\r\n            const userAnswer = answers[index];\r\n            const isCorrect = userAnswer === question.answerIndex;\r\n            const isAttempted = userAnswer !== null;\r\n            \r\n            return (\r\n              <List.Accordion\r\n                key={index}\r\n                title={`Q${index + 1}. ${question.question.substring(0, 50)}...`}\r\n                description={isAttempted ? (isCorrect ? 'Correct' : 'Wrong') : 'Not Attempted'}\r\n                left={props => (\r\n                  <List.Icon \r\n                    {...props} \r\n                    icon={isAttempted ? (isCorrect ? 'check-circle' : 'close-circle') : 'help-circle'}\r\n                    color={isAttempted ? (isCorrect ? '#4CAF50' : '#f44336') : '#9E9E9E'}\r\n                  />\r\n                )}\r\n                expanded={expandedQuestions[index]}\r\n                onPress={() => toggleQuestion(index)}\r\n                style={styles.questionAccordion}\r\n              >\r\n                <View style={styles.questionDetail}>\r\n                  <Text variant=\"bodyMedium\" style={styles.questionText}>\r\n                    {question.question}\r\n                  </Text>\r\n                  \r\n                  <View style={styles.optionsContainer}>\r\n                    {question.options.map((option, optionIndex) => {\r\n                      const isUserAnswer = userAnswer === optionIndex;\r\n                      const isCorrectAnswer = question.answerIndex === optionIndex;\r\n                      \r\n                      return (\r\n                        <View \r\n                          key={optionIndex} \r\n                          style={[\r\n                            styles.optionItem,\r\n                            isCorrectAnswer && styles.correctOption,\r\n                            isUserAnswer && !isCorrectAnswer && styles.wrongOption\r\n                          ]}\r\n                        >\r\n                          <Text style={[\r\n                            styles.optionText,\r\n                            isCorrectAnswer && styles.correctOptionText,\r\n                            isUserAnswer && !isCorrectAnswer && styles.wrongOptionText\r\n                          ]}>\r\n                            {getOptionLetter(optionIndex)}. {option}\r\n                            {isCorrectAnswer && ' ✓'}\r\n                            {isUserAnswer && !isCorrectAnswer && ' ✗'}\r\n                          </Text>\r\n                        </View>\r\n                      );\r\n                    })}\r\n                  </View>\r\n                  \r\n                  <View style={styles.explanationContainer}>\r\n                    <Text variant=\"titleSmall\" style={styles.explanationTitle}>\r\n                      Explanation:\r\n                    </Text>\r\n                    <Text variant=\"bodyMedium\" style={styles.explanationText}>\r\n                      {question.explanation}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              </List.Accordion>\r\n            );\r\n          })}\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <Button\r\n          mode=\"contained\"\r\n          onPress={() => navigation.navigate('Dashboard')}\r\n          style={styles.homeButton}\r\n        >\r\n          Back to Dashboard\r\n        </Button>\r\n      </View>\r\n\r\n      <Snackbar\r\n        visible={snackbarVisible}\r\n        onDismiss={() => setSnackbarVisible(false)}\r\n        duration={3000}\r\n        action={{\r\n          label: 'OK',\r\n          onPress: () => setSnackbarVisible(false),\r\n        }}\r\n      >\r\n        Test completed successfully!\r\n      </Snackbar>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  summaryCard: {\r\n    margin: 16,\r\n    marginBottom: 8,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  statsRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginBottom: 20,\r\n  },\r\n  statItem: {\r\n    alignItems: 'center',\r\n  },\r\n  statNumber: {\r\n    fontWeight: 'bold',\r\n  },\r\n  attempted: {\r\n    color: '#2196F3',\r\n  },\r\n  correct: {\r\n    color: '#4CAF50',\r\n  },\r\n  wrong: {\r\n    color: '#f44336',\r\n  },\r\n  accuracy: {\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    color: '#2196F3',\r\n  },\r\n  chartCard: {\r\n    margin: 16,\r\n    marginVertical: 8,\r\n  },\r\n  chartTitle: {\r\n    textAlign: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  chart: {\r\n    marginVertical: 8,\r\n    borderRadius: 16,\r\n  },\r\n  reviewCard: {\r\n    margin: 16,\r\n    marginVertical: 8,\r\n  },\r\n  reviewTitle: {\r\n    marginBottom: 16,\r\n  },\r\n  questionAccordion: {\r\n    backgroundColor: '#fff',\r\n    marginBottom: 8,\r\n    borderRadius: 8,\r\n  },\r\n  questionDetail: {\r\n    padding: 16,\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  questionText: {\r\n    marginBottom: 16,\r\n    fontWeight: '500',\r\n  },\r\n  optionsContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  optionItem: {\r\n    padding: 8,\r\n    marginVertical: 2,\r\n    borderRadius: 4,\r\n    backgroundColor: '#fff',\r\n  },\r\n  correctOption: {\r\n    backgroundColor: '#E8F5E8',\r\n    borderColor: '#4CAF50',\r\n    borderWidth: 1,\r\n  },\r\n  wrongOption: {\r\n    backgroundColor: '#FFEBEE',\r\n    borderColor: '#f44336',\r\n    borderWidth: 1,\r\n  },\r\n  optionText: {\r\n    fontSize: 14,\r\n  },\r\n  correctOptionText: {\r\n    color: '#2E7D32',\r\n    fontWeight: '500',\r\n  },\r\n  wrongOptionText: {\r\n    color: '#C62828',\r\n    fontWeight: '500',\r\n  },\r\n  explanationContainer: {\r\n    backgroundColor: '#E3F2FD',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n  },\r\n  explanationTitle: {\r\n    marginBottom: 8,\r\n    fontWeight: 'bold',\r\n    color: '#1976D2',\r\n  },\r\n  explanationText: {\r\n    lineHeight: 20,\r\n  },\r\n  buttonContainer: {\r\n    padding: 16,\r\n    alignItems: 'center',\r\n  },\r\n  homeButton: {\r\n    minWidth: 200,\r\n    paddingVertical: 4,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}